<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 84697 -->
  <question type="stack">
    <name>
				<text>18.3.4.2 Identify and classify stationary points 1 (CJS rebuild)</text>
		</name>
    <questiontext format="moodle_auto_format">
				<text><![CDATA[<p class="HELM_exercise">Exercise</p>
<p>Find the stationary points for the function&nbsp;\(f(x,y) = {@exp@}\) .</p>
<p> For each stationary point classify it as either a local minimum, a local maximum or a saddle point.
</p>
<ol class="HELM_parts">
    <li>
        <p>\(\dfrac{\partial f}{\partial x} = \dfrac{\partial f}{\partial y} = 0\) at \((x, y)\) = [[input:ans1]] [[validation:ans1]]</p>
        
        <p>[[feedback:prt1]]</p>
    </li>

</ol>]]></text>
		</questiontext>
    <generalfeedback format="moodle_auto_format">
				<text></text>
		</generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
				<text>2021120900</text>
		</stackversion>
    <questionvariables>
				<text>/* This function has 1 local min and 1 saddle point and f_xy=0*/
/* I start by defining f_x, f_y and use them to find f*/
/* f_x= a*x, a>0 so that 1 point is (0,0) and f_xx>0 for local min*/
/* f_y= b*y*(c-y) so that 2nd point is (0,c) */

ordergreat(x,y);
a1: rand([10,12,14,16,18]);
b1: rand([3,6]);
c1: rand(3)+1;
c2: rand(10)+2

fx: a1*x;
fy: b1*y*(c1-y);
expr: int(fx,x)+expand(int(fy,y))+c2;

partialx: diff(expr, x);
partialy: diff(expr, y);
a:solve(partialx = 0, x);
b:solve(partialy = 0, y);
tacoords1:matrix([rhs(a[1]), rhs(b[1])]);
ta1: [["local minimum", true], ["local maximum", false], ["saddle point", false]];
tacoords2:matrix([rhs(a[1]), rhs(b[2])]);
ta2: [["local minimum", false], ["local maximum", false], ["saddle point", true]];

/* Calculate second derivatives and D*/
fxx: diff(fx,x);                              
fyy: expand(diff(fy,y));
fxy: diff(fy,x);
D: fxx*fyy-(fxy)^2;

/* Evaluate second derivatives and D */
fyyval1: ev( fyy, y=rhs(b[1]));
fyyval2: ev( fyy, y=rhs(b[2]));
Dval1: ev(D, x= rhs(a[1]), y=rhs(b[1]));
Dval2: ev(D, x= rhs(a[1]), y=rhs(b[2]));</text>
		</questionvariables>
    <specificfeedback format="html">
				<text></text>
		</specificfeedback>
    <questionnote>
				<text>\(f= {@exp@} \) so {{@tacoords1@} is local min, {@tacoords2@}, D= {@Dval2@} is saddle point</text>
		</questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
				<text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Correct answer, well done.]]></text>
		</prtcorrect>
    <prtpartiallycorrect format="html">
				<text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Your answer is partially correct.]]></text>
		</prtpartiallycorrect>
    <prtincorrect format="html">
				<text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Incorrect answer.]]></text>
		</prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>matrix</type>
      <tans>tacoords1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
				<text></text>
			</feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tacoords1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
					<text></text>
				</truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
					<text></text>
				</falsefeedback>
      </node>
    </prt>
    <tags>
      <tag><text>stamp:stack-back1.maths.ed.ac.uk+220309110357+hWJdqJ</text></tag>
      <tag><text>version:stack-back1.maths.ed.ac.uk+220309110357+GarIWj</text></tag>
    </tags>
    
</question>
</quiz>